=========================
``4-print_square`` module
=========================

``print_square`` will take one argument ``size`` which is an int greater than 0,
and prints ``#`` in size squared e.g print_square(2) prints ``##``
                                                            ``##``

::

Importing function from the module
>>> print_square = __import__("4-print_square").print_square

Now Use it
>>> print_square(4)
####
####
####
####

>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########

>>> print_square(0)


>>> print_square(1)
#

>>> print_square(-1)
Traceback (most recent call last):
    ...
ValueError: size must be >= 0

>>> print_square(None)
Traceback (most recent call last):
    ...
TypeError: size must be an integer

>>> print_square(2.1)
Traceback (most recent call last):
    ...
TypeError: size must be an integer

>>> print_square("Michael")
Traceback (most recent call last):
    ...
TypeError: size must be an integer
